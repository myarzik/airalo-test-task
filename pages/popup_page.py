from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from pages.base_page import BasePage

class PopupPage(BasePage):
    """ üî• –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ø–∞–ø–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ eSIM """

    LOCATORS = {
        'POPUP': (By.XPATH, '//div[@data-testid="package-detail"]'),
        'SELECTED_SIM': (By.XPATH, '//div[@data-testid="sim-detail-header"]'),
        'PACKAGE_TITLE': (By.XPATH, '//div[@data-testid="package-detail"]//div[@data-testid="sim-detail-operator-title"]'),
        'COVERAGE': (By.XPATH, '//div[@data-testid="package-detail"]//p[@data-testid="COVERAGE-value"]'),
        'DATA': (By.XPATH, '//div[@data-testid="package-detail"]//p[@data-testid="DATA-value"]'),
        'VALIDITY': (By.XPATH, '//div[@data-testid="package-detail"]//p[@data-testid="VALIDITY-value"]'),
        'PRICE': (By.XPATH, '//div[@data-testid="package-detail"]//p[@data-testid="PRICE-value"]'),
    }

    from selenium.webdriver.support import expected_conditions as EC

    def get_text_from_locator(self, key):
        """ üî• –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ –∫–ª—é—á—É """
        if key not in self.LOCATORS:
            raise ValueError(f'‚ùå –õ–æ–∫–∞—Ç–æ—Ä {key} –Ω–µ –Ω–∞–π–¥–µ–Ω!')

        self.wait_for_element(self.LOCATORS['POPUP'])  # –ñ–¥—ë–º –ø–æ–ø–∞–ø
        self.wait_for_element(self.LOCATORS['SELECTED_SIM'])  # –ñ–¥—ë–º –¥–∞–Ω–Ω—ã–µ eSIM

        # –û–∂–∏–¥–∞–µ–º, –ø–æ–∫–∞ —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—è–≤–∏—Ç—Å—è
        self.wait.until(EC.text_to_be_present_in_element(self.LOCATORS[key], ''))

        return self.get_text(self.LOCATORS[key])  # –ò—Å–ø–æ–ª—å–∑—É–µ–º `get_text()` –∏–∑ `BasePage`